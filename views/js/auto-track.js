(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["auto-track"],{

/***/ "../../node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/core/auto-track.js":
/*!******************************************************************************************************************************************************************************************!*\
  !*** /Users/mPoulain/Desktop/Lab/Modules/psxmarketingwithgoogle/_dev/node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/core/auto-track.js ***!
  \******************************************************************************************************************************************************************************************/
/*! exports provided: link, form */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"link\", function() { return link; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"form\", function() { return form; });\n/* harmony import */ var _callback__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./callback */ \"../../node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/core/callback/index.js\");\n\n// Check if a user is opening the link in a new tab\nfunction userNewTab(event) {\n    var typedEvent = event;\n    if (typedEvent.ctrlKey ||\n        typedEvent.shiftKey ||\n        typedEvent.metaKey ||\n        (typedEvent.button && typedEvent.button == 1)) {\n        return true;\n    }\n    return false;\n}\n// Check if the link opens in new tab\nfunction linkNewTab(element, href) {\n    if (element.target === '_blank' && href) {\n        return true;\n    }\n    return false;\n}\nfunction link(links, event, properties, options) {\n    var _this = this;\n    var elements = [];\n    // always arrays, handles jquery\n    if (!links) {\n        return this;\n    }\n    if (links instanceof Element) {\n        elements = [links];\n    }\n    else if ('toArray' in links) {\n        elements = links.toArray();\n    }\n    else {\n        elements = links;\n    }\n    elements.forEach(function (el) {\n        el.addEventListener('click', function (elementEvent) {\n            var _a, _b;\n            var ev = event instanceof Function ? event(el) : event;\n            var props = properties instanceof Function ? properties(el) : properties;\n            var href = el.getAttribute('href') ||\n                el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') ||\n                el.getAttribute('xlink:href') ||\n                ((_a = el.getElementsByTagName('a')[0]) === null || _a === void 0 ? void 0 : _a.getAttribute('href'));\n            var trackEvent = Object(_callback__WEBPACK_IMPORTED_MODULE_0__[\"pTimeout\"])(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_b = _this.settings.timeout) !== null && _b !== void 0 ? _b : 500);\n            if (!linkNewTab(el, href) &&\n                !userNewTab(elementEvent)) {\n                if (href) {\n                    elementEvent.preventDefault\n                        ? elementEvent.preventDefault()\n                        : (elementEvent.returnValue = false);\n                    trackEvent\n                        .catch(console.error)\n                        .then(function () {\n                        window.location.href = href;\n                    })\n                        .catch(console.error);\n                }\n            }\n        }, false);\n    });\n    return this;\n}\nfunction form(forms, event, properties, options) {\n    var _this = this;\n    // always arrays, handles jquery\n    if (!forms)\n        return this;\n    if (forms instanceof HTMLFormElement)\n        forms = [forms];\n    var elements = forms;\n    elements.forEach(function (el) {\n        if (!(el instanceof Element))\n            throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.');\n        var handler = function (elementEvent) {\n            var _a;\n            elementEvent.preventDefault\n                ? elementEvent.preventDefault()\n                : (elementEvent.returnValue = false);\n            var ev = event instanceof Function ? event(el) : event;\n            var props = properties instanceof Function ? properties(el) : properties;\n            var trackEvent = Object(_callback__WEBPACK_IMPORTED_MODULE_0__[\"pTimeout\"])(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 500);\n            trackEvent\n                .catch(console.error)\n                .then(function () {\n                el.submit();\n            })\n                .catch(console.error);\n        };\n        // Support the events happening through jQuery or Zepto instead of through\n        // the normal DOM API, because `el.submit` doesn't bubble up events...\n        var $ = window.jQuery || window.Zepto;\n        if ($) {\n            $(el).submit(handler);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            el.addEventListener('submit', handler, false);\n        }\n    });\n    return this;\n}\n//# sourceMappingURL=auto-track.js.map\n\n//# sourceURL=webpack:////Users/mPoulain/Desktop/Lab/Modules/psxmarketingwithgoogle/_dev/node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/core/auto-track.js?");

/***/ })

}]);