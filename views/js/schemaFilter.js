(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["schemaFilter"],{

/***/ "../../node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/lib/is-plan-event-enabled.js":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** /Users/mPoulain/Desktop/Lab/Modules/psxmarketingwithgoogle/_dev/node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/lib/is-plan-event-enabled.js ***!
  \****************************************************************************************************************************************************************************************************/
/*! exports provided: isPlanEventEnabled */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPlanEventEnabled\", function() { return isPlanEventEnabled; });\n/**\n * Determines whether a track event is allowed to be sent based on the\n * user's tracking plan.\n * If the user does not have a tracking plan or the event is allowed based\n * on the tracking plan configuration, returns true.\n */\nfunction isPlanEventEnabled(plan, planEvent) {\n    var _a, _b;\n    // Always prioritize the event's `enabled` status\n    if (typeof (planEvent === null || planEvent === void 0 ? void 0 : planEvent.enabled) === 'boolean') {\n        return planEvent.enabled;\n    }\n    // Assume absence of a tracking plan means events are enabled\n    return (_b = (_a = plan === null || plan === void 0 ? void 0 : plan.__default) === null || _a === void 0 ? void 0 : _a.enabled) !== null && _b !== void 0 ? _b : true;\n}\n//# sourceMappingURL=is-plan-event-enabled.js.map\n\n//# sourceURL=webpack:////Users/mPoulain/Desktop/Lab/Modules/psxmarketingwithgoogle/_dev/node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/lib/is-plan-event-enabled.js?");

/***/ }),

/***/ "../../node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/plugins/schema-filter/index.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** /Users/mPoulain/Desktop/Lab/Modules/psxmarketingwithgoogle/_dev/node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/plugins/schema-filter/index.js ***!
  \******************************************************************************************************************************************************************************************************/
/*! exports provided: schemaFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"schemaFilter\", function() { return schemaFilter; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../node_modules/.pnpm/tslib@2.4.0/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _lib_is_plan_event_enabled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/is-plan-event-enabled */ \"../../node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/lib/is-plan-event-enabled.js\");\n\n\nfunction disabledActionDestinations(plan, settings) {\n    var _a, _b;\n    if (!plan || !Object.keys(plan)) {\n        return {};\n    }\n    var disabledIntegrations = Object.keys(plan.integrations).filter(function (i) { return plan.integrations[i] === false; });\n    // This accounts for cases like Fullstory, where the settings.integrations\n    // contains a \"Fullstory\" object but settings.remotePlugins contains \"Fullstory (Actions)\"\n    var disabledRemotePlugins = [];\n    ((_a = settings.remotePlugins) !== null && _a !== void 0 ? _a : []).forEach(function (p) {\n        disabledIntegrations.forEach(function (int) {\n            if (p.name.includes(int) || int.includes(p.name)) {\n                disabledRemotePlugins.push(p.name);\n            }\n        });\n    });\n    return ((_b = settings.remotePlugins) !== null && _b !== void 0 ? _b : []).reduce(function (acc, p) {\n        if (p.settings['subscriptions']) {\n            if (disabledRemotePlugins.includes(p.name)) {\n                // @ts-expect-error element implicitly has an 'any' type because p.settings is a JSONObject\n                p.settings['subscriptions'].forEach(\n                // @ts-expect-error parameter 'sub' implicitly has an 'any' type\n                function (sub) { return (acc[\"\".concat(p.name, \" \").concat(sub.partnerAction)] = false); });\n            }\n        }\n        return acc;\n    }, {});\n}\nfunction schemaFilter(track, settings) {\n    function filter(ctx) {\n        var plan = track;\n        var ev = ctx.event.event;\n        if (plan && ev) {\n            var planEvent = plan[ev];\n            if (!Object(_lib_is_plan_event_enabled__WEBPACK_IMPORTED_MODULE_1__[\"isPlanEventEnabled\"])(plan, planEvent)) {\n                ctx.updateEvent('integrations', Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, ctx.event.integrations), { All: false, 'Segment.io': true }));\n                return ctx;\n            }\n            else {\n                var disabledActions = disabledActionDestinations(planEvent, settings);\n                ctx.updateEvent('integrations', Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, ctx.event.integrations), planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations), disabledActions));\n            }\n        }\n        return ctx;\n    }\n    return {\n        name: 'Schema Filter',\n        version: '0.1.0',\n        isLoaded: function () { return true; },\n        load: function () { return Promise.resolve(); },\n        type: 'before',\n        page: filter,\n        alias: filter,\n        track: filter,\n        identify: filter,\n        group: filter,\n    };\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:////Users/mPoulain/Desktop/Lab/Modules/psxmarketingwithgoogle/_dev/node_modules/.pnpm/@segment+analytics-next@1.44.0/node_modules/@segment/analytics-next/dist/pkg/plugins/schema-filter/index.js?");

/***/ })

}]);